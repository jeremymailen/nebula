plugins {
    id "application"
    id "com.zoltu.kotlin" version "1.0.3"
}

def kotlinVersion = '1.0.3'
def springBootVersion = '1.4.0.M3'

repositories {
    jcenter()
    mavenCentral()
    maven { url "http://repo.spring.io/milestone" }
    maven { url "http://repository.jetbrains.com/all" }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"
    compile 'com.fasterxml.jackson.module:jackson-module-kotlin:2.7.5'
    compile "org.springframework.boot:spring-boot-starter-websocket:$springBootVersion"
    compile "org.springframework.boot:spring-boot-starter-undertow:$springBootVersion"
    compile "org.springframework.boot:spring-boot-devtools:$springBootVersion"
    compile('io.moquette:moquette-broker:0.8.1') {
        exclude group: 'org.slf4j', module: 'slf4j-log4j12'
    }
    compile 'org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.1.0'

    testCompile "org.springframework.boot:spring-boot-starter-test:$springBootVersion"
    testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlinVersion"
    testCompile 'com.natpryce:hamkrest:1.2.0.0'
    testCompile 'com.nhaarman:mockito-kotlin:0.5.1'
    testCompile 'org.jetbrains.spek:spek:1.0.25'
}

test.testLogging {
    exceptionFormat 'full'
    stackTraceFilters 'entry_point'
}

run {
    main = 'org.jmailen.nebula.MainKt'
    environment('VERSION', project.version)
}

startScripts {
    mainClassName = 'org.jmailen.nebula.MainKt'
}

distTar.archiveName = 'nebula.tar'
distZip.enabled = false

task image(type: Exec, dependsOn: distTar, group: 'build') {
    description 'Build Docker image'
    commandLine 'docker', 'build', '-t', "jmailen/nebula:$project.version", './'
}
