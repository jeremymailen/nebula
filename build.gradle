plugins {
    id "application"
    id "com.zoltu.kotlin" version "1.0.2"
}

def kotlinVersion = '1.0.2'
def springBootVersion = '1.4.0.M2'

repositories {
    jcenter()
    mavenCentral()
    maven { url "http://repo.spring.io/milestone" }
    maven { url "http://repository.jetbrains.com/all" }
}

dependencies {
    compile("org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion",
            "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion",
            "org.springframework.boot:spring-boot-starter-web:$springBootVersion",
            "org.springframework.boot:spring-boot-starter-undertow:$springBootVersion"
    )
    testCompile("org.springframework.boot:spring-boot-starter-test:$springBootVersion",
                "org.jetbrains.kotlin:kotlin-test-junit:$kotlinVersion",
                'com.natpryce:hamkrest:1.1.0.0',
                'com.nhaarman:mockito-kotlin:0.4.0',
                'org.jetbrains.spek:spek:1.0.24'
    )
}

test.testLogging {
    exceptionFormat 'full'
    stackTraceFilters 'entry_point'
}

run {
    main = 'org.jmailen.nebula.MainKt'
    environment('VERSION', project.version)
}

startScripts {
    mainClassName = 'org.jmailen.nebula.MainKt'
}

distTar.archiveName = 'nebula.tar'

task image(type: Exec, dependsOn: distTar, group: 'build') {
    description 'Build Docker image'
    commandLine 'docker', 'build', '-t', "jmailen/nebula:$project.version", './'
}
